{"version":3,"sources":["Hamburger/style.js","Hamburger/index.js","NavBar/style.js","NavBar/index.js","Home/style.js","Home/index.js","About/style.js","About/index.js","Skills/style.js","Skills/index.js","Const/index.js","Portfolio/style.js","Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["HamburgerContainer","styled","div","HamburgerBar","Hamburger","isOpen","setIsOpen","className","onClick","NavContainer","props","color","NavRow","Link","NavLink","HamLink","Overlay","Ul","ul","Li","li","NavBar","routes","useState","window","onresize","innerWidth","display","map","route","exact","to","DivImg","Img","img","MainTxt","H1Main","h1","PMain","p","SecOne","section","Small","button","small","Home","src","Section","H2","h2","DivAbout","DivContact","DivPic","DivLink","ContactLink","a","P","LinkedinIcon","Email","Linkedin","GithubIcon","GithubSquare","About","href","Skill","Skills","Project","Title","TechBox","DivButton","WebIcon","Web","Portfolio","My404","App","path","render","component","Component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6ae896d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HamburgerContainer = styled.div`\n  width: 40px;\n  height: 25px;\n  position: relative;\n  display: none;\n  margin-left: auto;\n  cursor: pointer;\n  @media (max-width: 950px) {\n    display: block;\n  }\n`\nexport const HamburgerBar = styled.div`\n  position: absolute;\n  width: 25px;\n  height: 3px;\n  background-color: black;\n  left: 0;\n  /* transform: rotate(0deg); */\n  transition: all .50s ease-in-out;\n  &:nth-child(1) {\n    top: 0px;\n  }\n  &:nth-child(2) {\n    top: 6px\n  }\n  &:last-child {\n    top: 12px;\n  }\n  .open > & {\n    transition: all 1s ease-in-out;\n  }\n  .open  > &:first-child {\n    top: 45%;\n    transform: rotate(135deg);\n    transition: all .50s ease-in-out;\n  }\n  .open > &:nth-child(2){\n    opacity: 0;\n    left: -60px;\n    transition: all .50s ease-in-out;\n  }\n  .open > &:nth-child(3) {\n    transform: rotate(-135deg);\n    transition: all .50s ease-in-out;\n  }\n`","import React from 'react'\n\nimport {\n  HamburgerContainer,\n  HamburgerBar,\n} from './style'\n\nconst Hamburger  = ({isOpen, setIsOpen}) => {\n\n  return (\n    <HamburgerContainer className={isOpen ? \"open\" : \"closed\"} onClick={() => setIsOpen(!isOpen)}>\n      <HamburgerBar></HamburgerBar>\n      <HamburgerBar></HamburgerBar>\n      <HamburgerBar></HamburgerBar>\n    </HamburgerContainer>\n  )\n}\n\nexport default Hamburger","import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nexport const NavContainer = styled.div`\n  background-color: ${props => props.color ? props.color : \"black\"};\n`\n\nexport const NavRow = styled.div`\n  padding: 10px 0;\n  text-align: right;\n  margin-right: 21px;\n  @media (max-width: 950px) {\n    a {\n      display:none;\n    }\n  }\n`\n\nexport const Link = styled(NavLink)`\n  display:inline-block;\n  text-decoration: none;\n  padding: 15px;\n  text-transform: uppercase;\n  color: black;\n  &:hover {\n   \n  }\n  &.active{\n    border-bottom: 1px solid black;\n    transform: scale(1.5);\n    color: #f5c303;\n  }\n`\n\nexport const HamLink = styled(NavLink)`\n  display:inline-block;\n  text-decoration: none;\n  padding: 15px;\n  text-transform: uppercase;\n  color: white;\n  &:hover {\n \n  }\n  &.active{\n    border-bottom: 1px solid #f5c303;\n  }\n  .show > &.active {\n    border-bottom: none;\n    color: gold;\n  }\n`\n\nexport const Overlay = styled.div`\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  background-color: rgba(0,0,0, 0.7);\n  left: -120rem;\n  transition: left .75s ease-in-out;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  &.show {\n    left: 0;\n  }\n  & > a {\n    color: white;\n  }\n`\n\nexport const Ul = styled.ul`\n  padding-right: 10px;\n`\n\nexport const Li = styled.li`\n  list-style: none;\n`\n\n","import React, { useState } from 'react'\nimport Hamburger from '../Hamburger'\n\nimport { \n  NavContainer,\n  NavRow,\n  Ul,\n  Li,\n  Link,\n  HamLink,\n  Overlay\n } from './style'\n\nconst NavBar = ({ routes = [] }) => {\n\n  const [ isOpen, setIsOpen ] = useState(false)\n\n  window.onresize = () => (window.innerWidth > 900 && isOpen) && setIsOpen(false)\n\n  return (\n    <NavContainer color={\"white\"} display={\"\"}>\n      <NavRow>\n          {\n            routes.map(route =>\n              <Link exact to={`/${route}`}>{route}</Link>\n            )\n          }\n          <Hamburger setIsOpen={setIsOpen} isOpen={isOpen}/>\n      </NavRow>\n      <Overlay className={isOpen ? \"show\" : \"hide\"}>\n        <Ul>\n          {\n            routes.map(route =>\n              <Li onClick={() => setIsOpen(!isOpen)}>\n                <HamLink exact to={`/${route}`}>{route}</HamLink>\n              </Li>\n            )\n          }\n        </Ul>\n      </Overlay>\n    </NavContainer> \n  )\n}\n\nexport default NavBar\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom'\n\nexport const DivImg = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 50%;\n  @media (max-width: 550px) {\n    width: 40%;\n  }\n`\n\nexport const Img = styled.img`\n  width: 65%;\n  @media (max-width: 550px) {\n    width: 100%;\n  }\n`\n\nexport const MainTxt = styled.div`\n  width: 50%;\n  @media (max-width: 550px) {\n    width: 59%;\n  }\n`\n\nexport const DivLink = styled.div`\n  \n`\n\nexport const H1Main = styled.h1`\n  font-size: 4em;\n  margin: 0px;\n  @media (max-width: 820px) {\n    font-size: 3em;\n  }\n  @media (max-width: 670px) {\n    font-size: 2.5em;\n  }\n`\n\nexport const PMain = styled.p`\n  font-size: 2em;\n  @media (max-width: 820px) {\n    font-size: 1.5em;\n  }\n  @media (max-width: 550px) {\n    font-size: 1em;\n  }\n`\n\nexport const SecOne = styled.section`\ndisplay: flex;\njustify-content: center;\nmargin-top: 60px;\n`\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  margin: 15px;\n  text-transform: uppercase;\n  color: black;\n  &:nth-child(1) {\n   \n  }\n`\nexport const Button = styled.button`\n  width: 17%;\n  margin: 4px;\n  border-radius: 5px;\n  font-weight: bold;\n  &:nth-child(1) {\n   margin-left: 3px;\n  }\n  &:hover {\n    background: rgba(245, 195, 3, 1);\n    border: rgba(245, 195, 3, 1);\n    transform: scale(1.1);\n    position: relative;\n  }\n`\n\nexport const Small = styled.small`\n  font-size: 20px;\n  position: relative;\n  left: 3px;\n`","import React from 'react';\n\nimport { \n  Link,\n  DivLink,\n  DivImg,\n  Img,\n  MainTxt,\n  H1Main,\n  PMain,\n  SecOne,\n  Button,\n  Small\n  } from './style'\n\nconst Home = () => {\n  return (\n    <div>\n      <SecOne>\n        <DivImg>\n          <Img src=\"https://i.imgur.com/LttW85S.jpg\" />\n        </DivImg>\n        <MainTxt>\n          <H1Main>Full Stack<br /> Life Developer</H1Main>\n          <PMain>\"Debugging our Life\" \n            <br /> \n            <Small>De'Markus Matthews</Small>\n          </PMain>\n          {/* <DivLink>\n            <Button>\n              <Link exact to=\"/about\">portfolio</Link>\n            </Button>\n            <Button>\n              <Link>skills</Link>\n            </Button>\n            <Button>\n              <Link exact to=\"/about\">about</Link>\n            </Button>\n          </DivLink> */}\n        </MainTxt>\n      </SecOne>\n    </div>\n  )\n}\n\nexport default Home","import styled from 'styled-components';\nimport { Link } from 'react-router-dom'\nimport { Email } from 'styled-icons/material/Email'\nimport { Linkedin } from 'styled-icons/icomoon/Linkedin'\nimport { GithubSquare} from 'styled-icons/fa-brands/GithubSquare'\n\nexport const Section = styled.section`\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n  @media (max-width: 800px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\n// export const H1 = styled.h1`\n//   word-spacing: 4px;\n//   width: 100%;\n//   text-align: center;\n//   font-size: 4em;\n//   margin-bottom: 50px;\n//   margin-top: 16px;\n//   display: none;\n//   @media (max-width: 950px) {\n//     display: block;\n//   }\n// `\n\nexport const H2 = styled.h2`\n\n`\n\nexport const DivAbout = styled.div`\n  width: 48%;\n  @media (max-width: 800px) {\n    width: 71%;\n  }\n  @media (max-width: 500px) {\n    width: 94%;\n  }\n`\n\nexport const DivContact = styled.div`\n\n`\n\nexport const DivPic = styled.div`\n  width: 48%;\n  display: flex;\n  justify-content: center;\n`\n\nexport const DivLink = styled.div`\n  display: flex;\n  @media (max-width: 800px) {\n    padding-bottom: 20px;\n  }\n`\n\nexport const ContactLink = styled.a`\n  text-decoration: none;\n  margin-right: 50px;\n`\n\n\nexport const P = styled.p`\n  letter-spacing: 1px;\n  line-height: 30px;\n  font-size: 1.2em;\n`\n\nexport const Img = styled.img`\n  width: 325px;\n  height: 350px;\n`\n\nexport const EmailIcon = styled(Email)`\n  color: black;\n  width: 35px;\n  &:hover {\n    color: #f5c303;\n    transform: scale(1.3)\n  }\n`\n\nexport const LinkedinIcon = styled(Linkedin)`\n  color: black;\n  width: 35px;\n  &:hover {\n    color: #f5c303;\n    transform: scale(1.3)\n  }\n`\n\nexport const GithubIcon = styled(GithubSquare)`\n  color: black;\n  width: 35px;\n  &:hover {\n    color: #f5c303;\n    transform: scale(1.3)\n  }\n`","import React from 'react';\n\nimport {  \n  Section,\n  DivPic,\n  DivAbout,\n  DivContact,\n  DivLink,\n  ContactLink,\n  Img,\n  H2,\n  P,\n  EmailIcon,\n  LinkedinIcon,\n  GithubIcon\n} from './style'\n\nconst About = () => {\n  return (\n   <div>\n     <Section>\n      <DivPic>\n        <Img src=\"https://i.imgur.com/pzAOYmB.jpg\"/>\n      </DivPic>\n      <DivAbout>\n        <P>Exceptional full stack web developer with a mind to solve complex problems. I have a strong work ethic and like to finish in a timely manner. Always generating new ideas and I'm very good at seeing the pros and cons in them. A good understanding in a variety of web programming languages. Understanding the core concepts and techniques of maintenance and construction of websites. Active listener and can communicate in a clear way.\n        </P>\n        <DivContact>\n          <H2>Contact Me</H2>\n          <DivLink>\n            {/* <ContactLink><EmailIcon></EmailIcon>Email</ContactLink> */}\n            <ContactLink href='https://www.linkedin.com/in/demarkus-matthews-a12051172/'><LinkedinIcon></LinkedinIcon></ContactLink>\n            <ContactLink href='https://github.com/DManthonyx?tab=repositories'><GithubIcon></GithubIcon></ContactLink>\n          </DivLink>\n        </DivContact>\n      </DivAbout>\n     </Section>\n   </div>\n  )\n}\n\nexport default About","import styled from 'styled-components'\n\n// export const H1 = styled.h1`\n//   word-spacing: 4px;\n//   width: 100%;\n//   text-align: center;\n//   font-size: 4em;\n//   margin-bottom: 50px;\n//   margin-top: 16px;\n//   display: none;\n//   @media (max-width: 950px) {\n//     display: block;\n//   }\n// `\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  padding: 20px 100px;\n  &:nth-child(1) {\n    margin-top: 50px;\n  }\n  @media (max-width: 720px) {\n    padding: 20px 0px;\n    margin-bottom: 50px;\n  }\n`\n\nexport const Skill = styled.div`\n  width: 125px;\n  height: 125px;\n  padding: 22px;\n  @media (max-width: 500px) {\n    padding: 8px;\n  }\n`\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\n","import React from 'react';\n\nimport {  \n  Section,\n  Skill,\n  Img\n} from './style'\n\n\nconst Skills = () => {\n  return (\n    <div>\n      <Section>\n        <Skill><Img src=\"https://i.imgur.com/e30ab8k.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/pvriFr2.jpg\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/RxBss0D.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/usKsowm.png\" /></Skill>\n      </Section>\n      <Section>\n        <Skill><Img src=\"https://i.imgur.com/LQ55RYG.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/Wa65cuK.jpg\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/6mIDpjF.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/c85eM21.png\" /></Skill>\n      </Section>\n      <Section> \n        <Skill><Img src=\"https://i.imgur.com/1Np725C.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/siEyT2v.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/vjkDpeh.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/CdFOg7x.jpg\" /></Skill>\n      </Section>\n      <Section> \n        <Skill><Img src=\"https://i.imgur.com/4CWoqhE.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/Ol54srT.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/3blU1ee.png\" /></Skill>\n        <Skill><Img src=\"https://i.imgur.com/fUOJxle.jpg\" /></Skill>\n      </Section>\n    </div>\n  )\n}\n\nexport default Skills","export const routes  = [\"home\", \"portfolio\", \"skills\", \"about\"]","import styled from 'styled-components'\nimport { Web } from 'styled-icons/material/Web'\nimport { GithubSquare} from 'styled-icons/fa-brands/GithubSquare'\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n  @media (max-width: 780px) {\n    margin-bottom: 50px;\n  }\n`\n\nexport const Project = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n  margin-bottom: 20px;\n  border-bottom: 3px solid #f5c303;\n  @media (max-width: 511px) {\n    width: 94%;\n  }\n`\n\nexport const Title = styled.h2`\n  font-size: 2.5em;\n  margin: 0px;\n  letter-spacing: 1px;\n`\n\nexport const Img = styled.img`\n  width: 75%;\n  height: 400px;\n  @media (max-width: 780px) {\n    width: 100%;\n  }\n`\n\nexport const TechBox = styled.div`\n  width: 75%;\n  @media (max-width: 780px) {\n    width: 100%;\n  }\n`\n\nexport const P = styled.p`\n  font-size: 1em;\n  letter-spacing: 1px;\n  line-height: 25px;\n`\n\nexport const DivButton = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`\nexport const ContactLink = styled.a`\n\n`\n\nexport const WebIcon = styled(Web)`\n  color: black;\n  width: 45px;\n  &:hover {\n    color: #f5c303;\n    transform: scale(1.3)\n  }\n`\n\nexport const GithubIcon = styled(GithubSquare)`\n  color: black;\n  width: 35px;\n  &:hover {\n    color: #f5c303;\n    transform: scale(1.3)\n  }\n`","import React from 'react';\n\nimport {  \n  Section,\n  Project,\n  TechBox,\n  P,\n  Img,\n  Title,\n  DivButton,\n  ContactLink,\n  WebIcon,\n  GithubIcon\n} from './style'\n\n\nconst Portfolio = () => {\n  return (\n    <div>\n      <Section>\n        <Project>\n          <Title>SoberLiving</Title>\n          <Img src=\"https://i.imgur.com/9E5ZjG9.png\"/>\n          <TechBox>\n            <P>A web app/platform that list all the sober living homes/ treatment centers. Purpose is to serve both victims of addiction and businesses by providing a user friendly website that locates facilities in their area. Also for the business to better market themselves.</P>\n            <P>Technologies used: React, Postgres, Flask, Google Maps,</P>\n            <DivButton>\n              <ContactLink href=\"https://sober-living-react.herokuapp.com/\"><WebIcon></WebIcon></ContactLink>\n              <ContactLink href=\"https://github.com/DManthonyx/react-sober-living\"><GithubIcon></GithubIcon></ContactLink>\n            </DivButton>\n          </TechBox>\n        </Project>\n        <Project>\n          <Title>Dipn N Sipn</Title>\n          <Img src=\"https://i.imgur.com/a1f8xyn.png\"/>\n          <TechBox>\n            <P>A social driving adventure website. Is a mobile view app that serves the user by generating random locations specifically 3 at a time being based on there location first and than what ever city he/she would like to go bar hoping in. Making the night a bit easier by picking the location and making a adventure.</P>\n            <P>Technologies used: React, Firebase, Google Maps, Yelp</P>\n            <DivButton>\n              <ContactLink href=\"https://dipn-n-sipn.firebaseapp.com/\"><WebIcon></WebIcon></ContactLink>\n              <ContactLink href=\"https://github.com/DManthonyx/DipnSipn\"><GithubIcon></GithubIcon></ContactLink>\n            </DivButton>\n          </TechBox>\n        </Project>\n        <Project>\n          <Title>FortNite Mania</Title>\n          <Img src=\"https://i.imgur.com/n0RwIUS.png\"/>\n          <TechBox>\n            <P>A youtube for FortNite, where users can create an account to post their videos and show off their skills and see how many comments and likes that they receive. Has Also is mobile view/ fully responsive</P>\n            <P>Technologies used: JavaScript, EJS, Node, Express, Mongoose</P>\n            <DivButton>\n              <ContactLink href=\"https://fornite-mania.herokuapp.com/?fbclid=IwAR2XH0AXVpsy5YWBGNKP5mUNmVbcd2ORU3Os8pXKaW8w-7SooyOfO3xGB6o\n              \"><WebIcon></WebIcon></ContactLink>\n              <ContactLink href=\"https://github.com/DManthonyx/CRUD-app-project\"><GithubIcon></GithubIcon></ContactLink>\n            </DivButton>\n          </TechBox>\n        </Project>\n        <Project>\n          <Title>SlotMachine</Title>\n          <Img src=\"https://i.imgur.com/GaIvUx1.png\"/>\n          <TechBox>\n            <P>A simple but fun and interactive slot machine game. Cost 2 dollars to play and having 3 different options to select from, which is 20 50 100. 20 being the easiest and 100 being the hardest. Can win by getting either all bars which is the jack pot and thats double the pay and all the same fruit or 2 of the same fruit and one bar is the only way to win.</P>\n            <P>Technologies used: JavaScript,HTML5, CSS3</P>\n            <DivButton>\n              <ContactLink href=\"https://pages.git.generalassemb.ly/dmanthonyx/slotMachine/\"><WebIcon></WebIcon></ContactLink>\n              <ContactLink href=\"https://github.com/DManthonyx/slotMachinee\"><GithubIcon></GithubIcon></ContactLink>\n            </DivButton>\n          </TechBox>\n        </Project>\n      </Section>\n    </div>\n  )\n}\n\nexport default Portfolio","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport About from './About';\nimport Skills from './Skills';\nimport { routes } from './Const';\nimport Portfolio from './Portfolio';\n\nconst My404 = () => {\n if(true) {\n   return  <Redirect to=\"/home\" />\n }\n  return (\n    <div>\n      Your lost body\n      \n    </div>\n  )\n};\n\nclass App extends Component {\n  \n  render () {\n\n    return (\n      <main>\n        <NavBar routes={ routes } />\n      <Switch>\n        <Route exact path='/' render={() => <Home /> }  />\n        <Route exact path='/home' render={() => <Home /> }  />\n        <Route exact path='/about' render={() => <About />}  />\n        <Route exact path='/skills' render={() => <Skills />} />\n        <Route exact path='/portfolio' render={() => <Portfolio />} />\n        <Route component={ My404 } />\n      </Switch>\n    </main>\n    );\n  }\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App /> \n  </Router>, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}